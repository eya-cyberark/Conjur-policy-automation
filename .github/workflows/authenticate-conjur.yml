name: Authenticate and Fetch Secret from Conjur

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  authenticate_and_fetch_secret:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checkout code

    - name: Install curl
      run: |
        sudo apt-get update
        sudo apt-get install -y curl  # Install curl for API calls

    - name: Authenticate to Conjur and Get Token
      id: authenticate
      run: |
        # Run the curl command to authenticate to Conjur and get the token
        response=$(curl --header "Accept-Encoding: base64" --data 3hyc3sp22ayr0y1qpxsn3237wvg3224bz153jr30fm22bd6p41cb9tx5 \
          --write-out "%{http_code}" \
          --output response.txt \
          https://sme-andrew.secretsmgr.cyberark.cloud/api/authn/conjur/host%2Fdata%2Feyatest1/authenticate)

        status_code=$(echo "$response" | tail -n 1)
        
        if [ "$status_code" -eq 200 ]; then
          # If authentication is successful, store the token
          echo "Successfully authenticated. Token: $(cat response.txt)"
          echo "auth_token=$(cat response.txt)" >> $GITHUB_ENV
        else
          echo "Token has expired or authentication failed. Status Code: $status_code"
          exit 1
        fi

    - name: Fetch Secret from Conjur
      run: |
        # Fetch the secret using the auth_token from the previous step
        echo "Fetching secret from Conjur..."

        secret_response=$(curl --silent --header "Authorization: Token token=${{ env.auth_token }}" \
          https://sme-andrew.secretsmgr.cyberark.cloud/api/secrets/conjur/variable/data/vault/AAM_DEVOPS-DEMO/prediction/password)

        if [ -n "$secret_response" ]; then
          echo "Secret retrieved successfully: $secret_response"
        else
          echo "Failed to retrieve secret."
          exit 1
        fi

    - name: Display the Authentication Token
      run: |
        echo "Successfully authenticated. Token: ${{ env.auth_token }}"
        echo "Done"
