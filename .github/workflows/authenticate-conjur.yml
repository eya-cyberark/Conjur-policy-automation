on:
  schedule:
    - cron: '*/7 * * * *'  # Runs every 7 minutes

jobs:
  authenticate_and_fetch_secret:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checkout code

    - name: Install curl
      run: |
        sudo apt-get update
        sudo apt-get install -y curl  # Install curl for API calls

    - name: Authenticate to Conjur and Get Token
      id: authenticate
      run: |
        # Print the API Key (for debugging) to ensure it's being passed correctly (only for debugging, not recommended in production)
        echo "Using API Key: ${{ secrets.CONJUR_API_KEY }}"
        
        # Run the curl command to authenticate to Conjur and fetch the token
        response=$(curl --silent --header "Accept-Encoding: base64" \
          --data 2x4wdtxfrfepcxf2r533cwh7mb18hpr6pbfasgb2ptm78jxpnd9 \
          --write-out "%{http_code}" \
          --output response.txt \
          https://sme-andrew.secretsmgr.cyberark.cloud/api/authn/conjur/host%2Fdata%2Feyatest1/authenticate)

        # Check the response status code
        status_code=$(echo "$response" | tail -n 1)
        
        if [ "$status_code" -eq 200 ]; then
          # If the response code is 200, we got a valid token
          echo "Successfully authenticated. Token: $(cat response.txt)"
          echo "auth_token=$(cat response.txt)" >> $GITHUB_ENV
        else
          # If the response code is not 200, print an error message
          echo "Token has expired or authentication failed. Attempting to get a new token..."
          echo "Failed to authenticate. Status Code: $status_code"
          
          # Attempt to get a new token
          new_response=$(curl --silent --header "Accept-Encoding: base64" \
            --data 3hyc3sp22ayr0y1qpxsn3237wvg3224bz153jr30fm22bd6p41cb9tx5 \
            --write-out "%{http_code}" \
            --output new_response.txt \
            https://sme-andrew.secretsmgr.cyberark.cloud/api/authn/conjur/host%2Fdata%2Feyatest1/authenticate)

          new_status_code=$(echo "$new_response" | tail -n 1)

          if [ "$new_status_code" -eq 200 ]; then
            echo "Successfully authenticated again. Token: $(cat new_response.txt)"
            echo "auth_token=$(cat new_response.txt)" >> $GITHUB_ENV
          else
            echo "Failed to authenticate again. Status Code: $new_status_code"
            exit 1
          fi
        fi

    - name: Fetch Secret from Conjur
      run: |
        # Fetch the secret using the auth_token from the previous step
        echo "Fetching secret from Conjur..."

        secret_response=$(curl --silent --header "Authorization: Token token=${{ env.auth_token }}" \
          https://sme-andrew.secretsmgr.cyberark.cloud/api/secrets/conjur/variable/data/vault/AAM_DEVOPS-DEMO/prediction/password)

        # Check if secret was successfully fetched
        if [ -n "$secret_response" ]; then
          echo "Secret retrieved successfully: $secret_response"  # Printing the secret (for testing purposes)
        else
          echo "Failed to retrieve secret."
          exit 1
        fi

    - name: Display the Authentication Token
      run: |
        echo "Successfully authenticated. Token: ${{ env.auth_token }}"
        echo "Done"
